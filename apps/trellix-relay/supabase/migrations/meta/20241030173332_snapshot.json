{
  "id": "d32831ef-aa8b-442e-97dc-b5b940b1987f",
  "prevId": "c774c9c6-382d-40b3-aea0-10c24b7b7d54",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.boards": {
      "name": "boards",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar",
          "primaryKey": true,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "board_user_idx": {
          "name": "board_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "boards_user_id_users_id_fk": {
          "name": "boards_user_id_users_id_fk",
          "tableFrom": "boards",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable all operations for authenticated users based on userId": {
          "name": "Enable all operations for authenticated users based on userId",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = user_id",
          "withCheck": "(select auth.uid()) = user_id"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.columns": {
      "name": "columns",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar",
          "primaryKey": true,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "rank": {
          "name": "rank",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "board_id": {
          "name": "board_id",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_by": {
          "name": "updated_by",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "column_board_idx": {
          "name": "column_board_idx",
          "columns": [
            {
              "expression": "board_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "column_rank_idx": {
          "name": "column_rank_idx",
          "columns": [
            {
              "expression": "rank",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "columns_user_id_users_id_fk": {
          "name": "columns_user_id_users_id_fk",
          "tableFrom": "columns",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "columns_board_id_boards_id_fk": {
          "name": "columns_board_id_boards_id_fk",
          "tableFrom": "columns",
          "tableTo": "boards",
          "columnsFrom": [
            "board_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable all operations for authenticated users based on userId": {
          "name": "Enable all operations for authenticated users based on userId",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = user_id",
          "withCheck": "(select auth.uid()) = user_id"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.items": {
      "name": "items",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "varchar",
          "primaryKey": true,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "rank": {
          "name": "rank",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "column_id": {
          "name": "column_id",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_by": {
          "name": "updated_by",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "item_column_idx": {
          "name": "item_column_idx",
          "columns": [
            {
              "expression": "column_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "item_rank_idx": {
          "name": "item_rank_idx",
          "columns": [
            {
              "expression": "rank",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "items_user_id_users_id_fk": {
          "name": "items_user_id_users_id_fk",
          "tableFrom": "items",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "items_column_id_columns_id_fk": {
          "name": "items_column_id_columns_id_fk",
          "tableFrom": "items",
          "tableTo": "columns",
          "columnsFrom": [
            "column_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Enable all operations for authenticated users based on userId": {
          "name": "Enable all operations for authenticated users based on userId",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.uid()) = user_id",
          "withCheck": "(select auth.uid()) = user_id"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.users": {
      "name": "users",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}